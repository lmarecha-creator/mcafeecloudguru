name: branch build and deploy

on:
  push:
    branches-ignore:
      - master

jobs:
  build:

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [12.x]
    env:
      S3_BUCKET_NAME: mfecloudgurutraining

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
        ref: ${GITHUB_REF##*/}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: npm install, build, and test
      run: |
        npm ci
        npm run env
        npm run build --if-present
        npm test
      env:
        CI: true
        HUGO_PARAMS_listTodo: true

    - name: Deploy content to S3 Bucket
      run: aws s3 sync public/ s3://${S3_BUCKET_NAME}/branches/${GITHUB_REF##*/} --delete --cache-control "max-age=60, public"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Deploy cloud formation templates to S3 Bucket
      run: aws s3 sync templates/ s3://${S3_BUCKET_NAME}/branches/${GITHUB_REF##*/}/templates/ --delete --cache-control "max-age=60, public"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
        
    - name: Invalidate Cloudfront Cache
      run: aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID_BRANCHES} --paths /${GITHUB_REF##*/}/\*
      env:
        CLOUDFRONT_ID_BRANCHES: ${{ secrets.CLOUDFRONT_ID_BRANCHES }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
